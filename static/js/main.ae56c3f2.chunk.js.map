{"version":3,"sources":["components/Task.jsx","components/TasksList.jsx","components/App.js","index.js"],"names":["Task","props","addTask","deleteTask","moveTask","task","useState","isSaved","saved","setSaved","formAction","setFormAction","className","disabled","onClick","newStatus","status","id","onSubmit","event","preventDefault","newTask","title","target","elements","value","description","type","name","placeholder","defaultValue","rows","TasksList","taskList","tasksForStatus","tasks","addEmptyTask","filter","map","App","setTasks","lastTask","length","newTaskId","undefined","taskToAdd","filteredTasks","newTaskList","saveTasksToLocalStorage","taskId","localStorage","setItem","JSON","stringify","useEffect","loadedTasks","getItem","parse","loadTasksFromLocalStorage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae56c3f2.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function Task(props) {\n  const { addTask, deleteTask, moveTask, task } = props;\n\n  const [saved, setSaved] = useState(task.isSaved);\n  const [formAction, setFormAction] = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (formAction === \"save\") {\n      if (saved) {\n        setSaved(false);\n      } else {\n        let newTask = {\n          id: task.id,\n          title: event.target.elements.title.value,\n          description: event.target.elements.description.value,\n          status: task.status,\n          isSaved: true,\n        };\n        addTask(newTask);\n        setSaved(true);\n      }\n    }\n    if (formAction === \"delete\") {\n      deleteTask(task.id);\n    }\n  }\n\n  function handleMoveLeft() {\n    let newStatus = \"\";\n    if (task.status === \"In Progress\") {\n      newStatus = \"To Do\";\n    } else if (task.status === \"Done\") {\n      newStatus = \"In Progress\";\n    }\n    if (newStatus !== \"\") {\n      moveTask(task.id, newStatus);\n    }\n  }\n\n  function handleMoveRight() {\n    let newStatus = \"\";\n    if (task.status === \"To Do\") {\n      newStatus = \"In Progress\";\n    } else if (task.status === \"In Progress\") {\n      newStatus = \"Done\";\n    }\n    if (newStatus !== \"\") {\n      moveTask(task.id, newStatus);\n    }\n  }\n\n  return (\n    <div className=\"task\">\n      <button\n        disabled={!saved}\n        onClick={handleMoveLeft}\n      >\n        &#171;\n      </button>\n      <form onSubmit={handleSubmit} className=\"task-item\">\n        <input\n          type=\"text\"\n          className=\"title input\"\n          name=\"title\"\n          placeholder=\"Enter Title\"\n          disabled={saved}\n          defaultValue={task.title}\n        />\n        <textarea\n          rows=\"2\"\n          className=\"description input\"\n          name=\"description\"\n          placeholder=\"Enter Description\"\n          defaultValue={task.description}\n          disabled={saved}\n        />\n\n        <button\n          onClick={() => {\n            setFormAction(\"save\");\n          }}\n          className=\"button\"\n        >\n          {saved ? \"Edit\" : \"Save Task\"}\n        </button>\n        {saved && (\n          <button\n            onClick={() => {\n              setFormAction(\"delete\");\n            }}\n            className=\"button delete\"\n          >\n            X\n          </button>\n        )}\n      </form>\n      <button\n        disabled={!saved}\n        onClick={handleMoveRight}\n       \n      >\n        &#187;\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Task from \"./Task\";\n\nexport default function TasksList(props) {\n  const { status, tasks, addTask, deleteTask, addEmptyTask, moveTask } = props;\n  let taskList, tasksForStatus;\n\n  function handleAddEmpty() {\n    addEmptyTask(status);\n  }\n\n  if (tasks) {\n    tasksForStatus = tasks.filter((task) => {\n      return task.status === status;\n    });\n  }\n\n  if (tasksForStatus) {\n    taskList = tasksForStatus.map((task) => {\n      return (\n        <Task\n          addTask={(task) => addTask(task)}\n          deleteTask={(id) => deleteTask(id)}\n          moveTask={(id, status) => moveTask(id, status)}\n          key={task.id}\n          task={task}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className=\"statusLine\">\n      <h3 className=\"task-list-heading\">{status} Tasks</h3>\n      {taskList}\n      {status === \"To Do\" ? (\n        <button onClick={handleAddEmpty} className=\"add-task-btn\">\n          +\n        </button>\n      ) : null}\n    </div>\n  );\n}\n","import { useRef, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./TasksList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    loadTasksFromLocalStorage();\n  }, []);\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        description: \"\",\n        status: status,\n      },\n    ]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  function deleteTask(taskId) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskId;\n    });\n    setTasks(filteredTasks);\n    saveTasksToLocalStorage(filteredTasks);\n  }\n\n  function moveTask(id, newStatus) {\n    let task = tasks.filter((task) => {\n      return task.id === id;\n    })[0];\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n    task.status = newStatus;\n    let newTaskList = [...filteredTasks, task];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  function saveTasksToLocalStorage(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  function loadTasksFromLocalStorage() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n    let tasks = JSON.parse(loadedTasks);\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Task Management</h1>\n      <main>\n        <section className=\"flex-container\">\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"To Do\"\n          />\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"In Progress\"\n          />\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Done\"\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}