{"ast":null,"code":"import _toConsumableArray from\"/home/arawat/react/task-manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/arawat/react/task-manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState,useEffect}from\"react\";import\"./App.css\";import TaskList from\"./TasksList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];useEffect(function(){loadTasksFromLocalStorage();},[]);function addEmptyTask(status){var lastTask=tasks[tasks.length-1];var newTaskId=1;if(lastTask!==undefined){newTaskId=lastTask.id+1;}setTasks(function(tasks){return[].concat(_toConsumableArray(tasks),[{id:newTaskId,title:\"\",description:\"\",status:status}]);});}function addTask(taskToAdd){var filteredTasks=tasks.filter(function(task){return task.id!==taskToAdd.id;});var newTaskList=[].concat(_toConsumableArray(filteredTasks),[taskToAdd]);setTasks(newTaskList);saveTasksToLocalStorage(newTaskList);}function deleteTask(taskId){var filteredTasks=tasks.filter(function(task){return task.id!==taskId;});setTasks(filteredTasks);saveTasksToLocalStorage(filteredTasks);}function moveTask(id,newStatus){var task=tasks.filter(function(task){return task.id===id;})[0];var filteredTasks=tasks.filter(function(task){return task.id!==id;});task.status=newStatus;var newTaskList=[].concat(_toConsumableArray(filteredTasks),[task]);setTasks(newTaskList);saveTasksToLocalStorage(newTaskList);}function saveTasksToLocalStorage(tasks){localStorage.setItem(\"tasks\",JSON.stringify(tasks));}function loadTasksFromLocalStorage(){var loadedTasks=localStorage.getItem(\"tasks\");var tasks=JSON.parse(loadedTasks);if(tasks){setTasks(tasks);}}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Task Management\"}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"section\",{className:\"flex-container\",children:[/*#__PURE__*/_jsx(TaskList,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"To Do\"}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"In Progress\"}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,addEmptyTask:addEmptyTask,addTask:addTask,deleteTask:deleteTask,moveTask:moveTask,status:\"Done\"})]})})]});}export default App;","map":{"version":3,"sources":["/home/arawat/react/task-manager/src/components/App.js"],"names":["useRef","useState","useEffect","TaskList","App","tasks","setTasks","loadTasksFromLocalStorage","addEmptyTask","status","lastTask","length","newTaskId","undefined","id","title","description","addTask","taskToAdd","filteredTasks","filter","task","newTaskList","saveTasksToLocalStorage","deleteTask","taskId","moveTask","newStatus","localStorage","setItem","JSON","stringify","loadedTasks","getItem","parse"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./TasksList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    loadTasksFromLocalStorage();\n  }, []);\n\n  function addEmptyTask(status) {\n    const lastTask = tasks[tasks.length - 1];\n    let newTaskId = 1;\n    if (lastTask !== undefined) {\n      newTaskId = lastTask.id + 1;\n    }\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        id: newTaskId,\n        title: \"\",\n        description: \"\",\n        status: status,\n      },\n    ]);\n  }\n\n  function addTask(taskToAdd) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskToAdd.id;\n    });\n    let newTaskList = [...filteredTasks, taskToAdd];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  function deleteTask(taskId) {\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== taskId;\n    });\n    setTasks(filteredTasks);\n    saveTasksToLocalStorage(filteredTasks);\n  }\n\n  function moveTask(id, newStatus) {\n    let task = tasks.filter((task) => {\n      return task.id === id;\n    })[0];\n    let filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    });\n    task.status = newStatus;\n    let newTaskList = [...filteredTasks, task];\n    setTasks(newTaskList);\n    saveTasksToLocalStorage(newTaskList);\n  }\n\n  function saveTasksToLocalStorage(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  function loadTasksFromLocalStorage() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n    let tasks = JSON.parse(loadedTasks);\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Task Management</h1>\n      <main>\n        <section className=\"flex-container\">\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"To Do\"\n          />\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"In Progress\"\n          />\n          <TaskList\n            tasks={tasks}\n            addEmptyTask={addEmptyTask}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            moveTask={moveTask}\n            status=\"Done\"\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}