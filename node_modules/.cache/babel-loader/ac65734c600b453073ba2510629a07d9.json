{"ast":null,"code":"var _jsxFileName = \"/home/arawat/react/task-manager/src/components/TasksList.jsx\";\nimport React from \"react\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TasksList(props) {\n  const {\n    status,\n    tasks,\n    addTask,\n    deleteTask,\n    addEmptyTask,\n    moveTask\n  } = props;\n  let taskList, tasksForStatus;\n\n  function handleAddEmpty() {\n    addEmptyTask(status);\n  }\n\n  if (tasks) {\n    tasksForStatus = tasks.filter(task => {\n      return task.status === status;\n    });\n  }\n\n  if (tasksForStatus) {\n    taskList = tasksForStatus.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        addTask: task => addTask(task),\n        deleteTask: id => deleteTask(id),\n        moveTask: (id, status) => moveTask(id, status),\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statusLine\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"task-list-heading\",\n      children: [status, \" Tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), taskList, console.log(taskList), status === \"To Do\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddEmpty,\n      className: \"add-task-btn\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = TasksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"sources":["/home/arawat/react/task-manager/src/components/TasksList.jsx"],"names":["React","Task","TasksList","props","status","tasks","addTask","deleteTask","addEmptyTask","moveTask","taskList","tasksForStatus","handleAddEmpty","filter","task","map","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA,YAAtC;AAAoDC,IAAAA;AAApD,MAAiEN,KAAvE;AACA,MAAIO,QAAJ,EAAcC,cAAd;;AAEA,WAASC,cAAT,GAA0B;AACxBJ,IAAAA,YAAY,CAACJ,MAAD,CAAZ;AACD;;AAED,MAAIC,KAAJ,EAAW;AACTM,IAAAA,cAAc,GAAGN,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAU;AACtC,aAAOA,IAAI,CAACV,MAAL,KAAgBA,MAAvB;AACD,KAFgB,CAAjB;AAGD;;AAED,MAAIO,cAAJ,EAAoB;AAClBD,IAAAA,QAAQ,GAAGC,cAAc,CAACI,GAAf,CAAoBD,IAAD,IAAU;AACtC,0BACE,QAAC,IAAD;AACE,QAAA,OAAO,EAAGA,IAAD,IAAUR,OAAO,CAACQ,IAAD,CAD5B;AAEE,QAAA,UAAU,EAAGE,EAAD,IAAQT,UAAU,CAACS,EAAD,CAFhC;AAGE,QAAA,QAAQ,EAAE,CAACA,EAAD,EAAKZ,MAAL,KAAgBK,QAAQ,CAACO,EAAD,EAAKZ,MAAL,CAHpC;AAKE,QAAA,IAAI,EAAEU;AALR,SAIOA,IAAI,CAACE,EAJZ;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVU,CAAX;AAWD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,iBAAmCZ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,QAFH,EAGGO,OAAO,CAACC,GAAR,CAAYR,QAAZ,CAHH,EAIGN,MAAM,KAAK,OAAX,gBACC;AAAQ,MAAA,OAAO,EAAEQ,cAAjB;AAAiC,MAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IARN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KAxCuBV,S","sourcesContent":["import React from \"react\";\nimport Task from \"./Task\";\n\nexport default function TasksList(props) {\n  const { status, tasks, addTask, deleteTask, addEmptyTask, moveTask } = props;\n  let taskList, tasksForStatus;\n\n  function handleAddEmpty() {\n    addEmptyTask(status);\n  }\n\n  if (tasks) {\n    tasksForStatus = tasks.filter((task) => {\n      return task.status === status;\n    });\n  }\n\n  if (tasksForStatus) {\n    taskList = tasksForStatus.map((task) => {\n      return (\n        <Task\n          addTask={(task) => addTask(task)}\n          deleteTask={(id) => deleteTask(id)}\n          moveTask={(id, status) => moveTask(id, status)}\n          key={task.id}\n          task={task}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className=\"statusLine\">\n      <h3 className=\"task-list-heading\">{status} Tasks</h3>\n      {taskList}\n      {console.log(taskList)}\n      {status === \"To Do\" ? (\n        <button onClick={handleAddEmpty} className=\"add-task-btn\">\n          +\n        </button>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}